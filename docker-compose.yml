version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: livestream_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: livestream_betting
    volumes:
      - mongodb_data:/data/db
      - ./database/init.js:/docker-entrypoint-initdb.d/init.js:ro
      - C:\MongoDB\data\db:/data/db
    networks:
      - livestream_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: livestream_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/livestream_betting?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
      SOCKET_CORS_ORIGIN: http://localhost:3000
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - livestream_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: livestream_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_BASE_URL: http://localhost:5000/api/v1
      VITE_SOCKET_URL: http://localhost:5000
      VITE_APP_NAME: Livestream Betting Platform
    depends_on:
      - backend
    networks:
      - livestream_network

  # Admin Dashboard
  dashboard:
    build:
      context: ./dashboard-admin
      dockerfile: Dockerfile
    container_name: livestream_dashboard
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      VITE_API_BASE_URL: http://localhost:5000/api/v1
    depends_on:
      - backend
    networks:
      - livestream_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: livestream_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - dashboard
      - backend
    networks:
      - livestream_network

volumes:
  mongodb_data:
    driver: local

networks:
  livestream_network:
    driver: bridge
